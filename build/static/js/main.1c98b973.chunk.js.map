{"version":3,"sources":["Book.js","list.js","Booklist.js","App.js","serviceWorker.js","index.js"],"names":["Book","state","count","showInfo","handleAdd","setState","handleMinus","handleReset","toggleInfo","this","props","info","id","img","title","author","handleDelete","style","display","gridTemplateColumns","gridColumnGap","margin","className","src","alt","type","onClick","class","Component","books","Booklist","list","name","age","console","log","sortedBooks","filter","item","map","key","App","href","data-target","data-tooltip","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1c98b973.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Book extends Component {\r\n  state = {\r\n    count: 0,\r\n    showInfo: false,\r\n  }\r\n\r\n  handleAdd = () => {\r\n    this.setState({\r\n      count: this.state.count + 1,\r\n    })\r\n  }\r\n  handleMinus = () => {\r\n    this.setState({\r\n      count: this.state.count - 1,\r\n    })\r\n  }\r\n  handleReset = () => {\r\n    this.setState({\r\n      count: 0,\r\n    })\r\n  }\r\n\r\n  toggleInfo = () => {\r\n    this.setState({\r\n      showInfo: !this.state.showInfo,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { id, img, title, author } = this.props.info\r\n    const { handleDelete } = this.props\r\n    const styles = {\r\n      display: 'grid',\r\n      gridTemplateColumns: 'auto 1fr',\r\n      gridColumnGap: '3rem',\r\n      margin: '2rem 0',\r\n    }\r\n\r\n    return (\r\n      <section style={styles} className='App'>\r\n        <div className='row'>\r\n          <div className='col s12 l4'>\r\n            <img\r\n              src={img}\r\n              className='responsive-img materialboxed'\r\n              alt='books'\r\n            />\r\n          </div>\r\n\r\n          <div className='col s12 l7 offset-l1'>\r\n            <div className='collection'>\r\n              <h5 className='title collection-item indigo-text text-darken-4'>\r\n                Title: {title}\r\n              </h5>\r\n              <h5 className='collection-item indigo-text text-darken-4'>\r\n                Author: {author}\r\n              </h5>\r\n              <h6 className='collection-item indigo-text text-darken-4'>\r\n                Count: {this.state.count}\r\n              </h6>\r\n              <button\r\n                className='btn-small'\r\n                type='button'\r\n                onClick={this.handleAdd}\r\n              >\r\n                <i class='material-icons prefix'>add</i>\r\n              </button>\r\n              <button\r\n                className='btn-small'\r\n                type='button'\r\n                onClick={this.handleReset}\r\n              >\r\n                <i class='material-icons'>restore</i>\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn-small'\r\n                onClick={this.handleMinus}\r\n              >\r\n                <i class='material-icons'>remove</i>\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn-small'\r\n                onClick={() => handleDelete(id)}\r\n              >\r\n                <i class='material-icons'>delete</i>\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn-small center'\r\n                onClick={this.toggleInfo}\r\n              >\r\n                <i class='material-icons'>info</i>\r\n              </button>\r\n\r\n              {this.state.showInfo ? (\r\n                <h6 className='white-text'>{title}</h6>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","const books = [\r\n  {\r\n    id: 1,\r\n    img:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/61xTjuVrwsL._AC_SX184_.jpg\",\r\n    title:\r\n      \"Live Free Or Die: America (and the World) on the BrinkLive Free\",\r\n    author: \"Sean Hannity\",\r\n  },\r\n  {\r\n    id: 2,\r\n    img:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/41r4MsfTSxL._AC_SX184_.jpg\",\r\n    title: \"Rage\",\r\n    author: \"Bob Woodward\",\r\n  },\r\n  {\r\n    id: 3,\r\n    img:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/41+V+iVRLiL._AC_SX184_.jpg\",\r\n    title:\r\n      \"Melania and Me: The Rise and Fall of My Friendship with the First Lady\",\r\n    author: \"Stephanie Winston\",\r\n  },\r\n  {\r\n    id: 4,\r\n    img:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/41TJxOmPRjL._AC_SX184_.jpg\",\r\n    title: \"Me: Elton John Official AutobiographyMe: Elton John Official\",\r\n    author: \"Elton John\",\r\n  },\r\n];\r\n\r\nexport default books","import React, { Component } from 'react'\r\nimport Book from \"./Book\"\r\nimport list from \"./list\"\r\nexport default class Booklist extends Component {\r\n  state={\r\n    books: list,\r\n    name: null,\r\n    age: null\r\n  }\r\n\r\nhandleDelete=(id)=>{\r\n  console.log(this.state.books);\r\n  const sortedBooks = this.state.books.filter(item=> item.id !== id);\r\n  this.setState({\r\n    books: sortedBooks\r\n  })\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"booklist\">\r\n        {this.state.books.map((item) => (\r\n          <Book info={item} key={item.id} handleDelete={this.handleDelete} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Booklist from './Booklist';\n\nfunction App() {\n  return (\n    <>\n    <header>\n      <nav class=\"nav-wrapper teal\">\n        <div class=\"container\">\n          <a href=\"\" class=\"brand-logo\">Book Store</a>\n          <a href=\"\" class=\"sidenav-trigger\" data-target=\"mobile-menu\">\n            <i class=\"material-icons\">menu</i>\n          </a>\n          <ul class=\"right hide-on-med-and-down\">\n            <li><a href=\"#photos\">Home</a></li>\n            <li><a href=\"#services\">References</a></li>\n            <li><a href=\"#contact\">Contact</a></li>\n            <li><a href=\"#\" class=\" tooltipped btn-floating btn-small indigo darken-4\" data-tooltip=\"This is Instagram\">\n              <i class=\"fab fa-instagram\"></i>\n            </a></li>\n            <li><a href=\"#\" class=\"tooltipped btn-floating btn-small indigo darken-4\" data-tooltip=\"This is Facebook\">\n              <i class=\"fab fa-facebook\"></i>\n            </a></li>\n            <li><a href=\"#\" class=\"tooltipped btn-floating btn-small indigo darken-4\" data-tooltip=\"This is Twitter\">\n              <i class=\"fab fa-twitter\"></i>\n            </a></li>\n          </ul>\n\n          <ul class=\"sidenav teal darken-3\" id=\"mobile-menu\">\n            <li><a href=\"#\">Home</a></li>\n            <li><a href=\"#\">References</a></li>\n            <li><a href=\"#\">Contact</a></li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n\n\n      <div className='App container'>\n        <h1 className='teal-text center'>Books Catalog</h1>\n        <Booklist />\n      </div>\n    <footer class=\"page-footer grey darken-3\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col s12 l6\">\n            <h5>About Me</h5>\n            <p>\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n              Laudantium esse repellat, autem tenetur eligendi quam eum maxime\n              earum! Delectus!\n            </p>\n            <p>\n              Lorem ipsum dolor sit, amet consectetur adipisicing elit.\n              Laudantium esse repellat, autem tenetur eligendi quam eum maxime\n              earum! Delectus!\n            </p>\n          </div>\n          <div class=\"col s12 l4 offset-l2\">\n            <h5>Connect</h5>\n            <ul>\n              <li><a href=\"\" class=\"grey-text text-lighten-3\">Facebook</a></li>\n              <li><a href=\"\" class=\"grey-text text-lighten-3\">Twitter</a></li>\n              <li><a href=\"\" class=\"grey-text text-lighten-3\">LinkedIn</a></li>\n              <li><a href=\"\" class=\"grey-text text-lighten-3\">Instagram</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"footer-copyright grey darken-4\">\n        <div class=\"container center-align\">&copy; 2020 Felix </div>\n      </div>\n    </footer>\n\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}